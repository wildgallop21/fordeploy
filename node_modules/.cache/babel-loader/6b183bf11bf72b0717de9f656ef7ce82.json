{"ast":null,"code":"var _jsxFileName = \"/Users/dayoon_sohn/Desktop/sparta/reactredux/react-lastweek/ALIKE-d-MOVIE-MOVIE/alikemovie/src/components/Post2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport { __postReviews } from \"../Redux/modules/reviewSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { reviewsSlice } from \"../Redux/modules/reviewSlice\";\nimport { __getReviews } from \"../Redux/modules/reviewSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post2() {\n  _s();\n\n  var _reviews;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const fetchReviews = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:3001/reviews\");\n    console.log('bbbb');\n  };\n\n  const onSubmitHandler = review => {\n    axios.post(\"http://localhost:3001/reviews\", review);\n    console.log('aaaaa');\n  };\n\n  useEffect(() => {\n    dispatch(__getReviews);\n    dispatch(__postReviews);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"Form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          console.log('ccc'); // 👇 submit했을 때 브라우저의 새로고침을 방지합니다. \n\n          e.preventDefault();\n          console.log(review);\n          onSubmitHandler(review);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: ev => {\n            const {\n              value\n            } = ev.target;\n            setReview({ ...review,\n              movie_title: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"post2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (_reviews = reviews) === null || _reviews === void 0 ? void 0 : _reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: review.movie_title\n        }, review.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post2, \"s5YDugppCHA/sTog5Ue+JVWibms=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = Post2;\nexport default Post2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post2\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","styled","axios","__postReviews","useDispatch","useSelector","reviewsSlice","__getReviews","Post2","dispatch","navigate","fetchReviews","data","get","console","log","onSubmitHandler","review","post","e","preventDefault","ev","value","target","setReview","movie_title","reviews","map","id"],"sources":["/Users/dayoon_sohn/Desktop/sparta/reactredux/react-lastweek/ALIKE-d-MOVIE-MOVIE/alikemovie/src/components/Post2.jsx"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from \"axios\"; \nimport { __postReviews } from \"../Redux/modules/reviewSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { reviewsSlice } from \"../Redux/modules/reviewSlice\";\nimport { __getReviews } from \"../Redux/modules/reviewSlice\";\n\n\n\n\n\nfunction Post2() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n  const fetchReviews = async () => {\n    const { data } = await axios.get(\"http://localhost:3001/reviews\");\n    \n    console.log('bbbb');\n  };\n\n  const onSubmitHandler = (review) => {\n    axios.post(\"http://localhost:3001/reviews\", review)\n    console.log('aaaaa');\n  };\n\n  useEffect(() => {\n    dispatch(__getReviews)\n    dispatch(__postReviews)\n  }, [dispatch]);\n\n\n\n\n\n  return (\n    <form className=\"Form\">\n    <div>\n\n        <form\n        onSubmit={(e) => {\n          console.log('ccc');\n\t\t\t\t\t// 👇 submit했을 때 브라우저의 새로고침을 방지합니다. \n          e.preventDefault();\n          console.log(review);\n          onSubmitHandler(review);\n        }}\n      >\n        <input\n          type=\"text\"\n          onChange={(ev) => {\n            const { value } = ev.target;\n            setReview({\n              ...review,\n              movie_title: value,\n            });\n          }}\n        />\n        <button>추가하기</button>\n        {/* <div>\n        {reviews?.map((review) => (\n          <div key={review.id}>{review.movie_title}</div>\n        ))}\n      </div> */}\n      </form>\n      <div>\n        post2\n      </div>\n      <div>\n        {reviews?.map((review) => (\n          <div key={review.id}>{review.movie_title}</div>\n        ))}\n      </div>\n\n\n\n\n      </div>\n\n   </form>\n  );\n}\n\nexport default Post2;"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,YAAT,QAA6B,8BAA7B;;;AAMA,SAASC,KAAT,GAAiB;EAAA;;EAAA;;EAEf,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,QAAQ,GAAGV,WAAW,EAA5B;;EAGA,MAAMW,YAAY,GAAG,YAAY;IAC/B,MAAM;MAAEC;IAAF,IAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,+BAAV,CAAvB;IAEAC,OAAO,CAACC,GAAR,CAAY,MAAZ;EACD,CAJD;;EAMA,MAAMC,eAAe,GAAIC,MAAD,IAAY;IAClCf,KAAK,CAACgB,IAAN,CAAW,+BAAX,EAA4CD,MAA5C;IACAH,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD,CAHD;;EAKAjB,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACF,YAAD,CAAR;IACAE,QAAQ,CAACN,aAAD,CAAR;EACD,CAHQ,EAGN,CAACM,QAAD,CAHM,CAAT;EASA,oBACE;IAAM,SAAS,EAAC,MAAhB;IAAA,uBACA;MAAA,wBAEI;QACA,QAAQ,EAAGU,CAAD,IAAO;UACfL,OAAO,CAACC,GAAR,CAAY,KAAZ,EADe,CAEpB;;UACKI,CAAC,CAACC,cAAF;UACAN,OAAO,CAACC,GAAR,CAAYE,MAAZ;UACAD,eAAe,CAACC,MAAD,CAAf;QACD,CAPD;QAAA,wBASA;UACE,IAAI,EAAC,MADP;UAEE,QAAQ,EAAGI,EAAD,IAAQ;YAChB,MAAM;cAAEC;YAAF,IAAYD,EAAE,CAACE,MAArB;YACAC,SAAS,CAAC,EACR,GAAGP,MADK;cAERQ,WAAW,EAAEH;YAFL,CAAD,CAAT;UAID;QARH;UAAA;UAAA;UAAA;QAAA,QATA,eAmBA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eA4BE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA5BF,eA+BE;QAAA,sBACGI,OADH,6CACG,SAASC,GAAT,CAAcV,MAAD,iBACZ;UAAA,UAAsBA,MAAM,CAACQ;QAA7B,GAAUR,MAAM,CAACW,EAAjB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QA/BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AA8CD;;GAxEQpB,K;UAEUJ,W,EACAJ,W;;;KAHVQ,K;AA0ET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}