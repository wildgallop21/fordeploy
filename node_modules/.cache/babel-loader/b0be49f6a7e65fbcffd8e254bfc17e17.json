{"ast":null,"code":"import _objectDestructuringEmpty from\"/Users/dayoon_sohn/Desktop/sparta/deploy/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _defineProperty from\"/Users/dayoon_sohn/Desktop/sparta/deploy/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _regeneratorRuntime from\"/Users/dayoon_sohn/Desktop/sparta/deploy/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/dayoon_sohn/Desktop/sparta/deploy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _extraReducers;import axios from\"axios\";import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";var url2=\"http://localhost:3001/comments\";var initialState={comments:[],isLoading:false,error:null};export var __postComments=createAsyncThunk(\"comments/postComments\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(payload,thunkAPI){var data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(url2,payload// reviewsId:payload.reviewsId,\n// comment: payload.comment,\n);case 3:data=_context.sent;console.log(data);return _context.abrupt(\"return\",thunkAPI.fulfillWithValue(data.data));case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);return _context.abrupt(\"return\",thunkAPI.rejectWithValue(_context.t0));case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());export var __getComments=createAsyncThunk(\"comments/getComments\",/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload,thunkAPI){var data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(url2);case 3:data=_context2.sent;// const data = await axios.get(url2+\"/\"+payload);\n// /comments 앞에부분 변수 할당해서 코드 줄이는 방법도 있음\nconsole.log(data);return _context2.abrupt(\"return\",thunkAPI.fulfillWithValue(data.data));case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);return _context2.abrupt(\"return\",thunkAPI.rejectWithValue(_context2.t0));case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());// export const updateUser2 = createAsyncThunk(\n//   \"users/update\", \n//   async (user) => {\n//   const response = await axios.post(\n//     \"http://localhost:8800/api/users/1/update\",\n//     user\n//   );\n//   return response.data;\n// });\n// export const loginUser = createAsyncThunk(\n//   \"auth/login\",\n//   async (authData) => {\n//     const response = axios.post(\"auth/token/login/\", {\n//       email: authData.email,\n//       password: authData.password,\n//     });\n//     return response.data;\n//   },\n//   {\n//     condition: (authData, { getState, extra }) => {\n//       const { auth } = getState();\n//       if ([\"fulfilled\", \"loading\"].includes(auth.status)) {\n//         return false;\n//       }\n//     },\n//   }\n// );\nexport var commentsSlice=createSlice({name:\"comments\",initialState:initialState,reducers:{},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,__getComments.pending,function(state){state.isLoading=true;// 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n}),_defineProperty(_extraReducers,__getComments.fulfilled,function(state,action){state.isLoading=false;// 네트워크 요청이 끝났으니, false로 변경합니다.\nstate.comments=action.payload;// Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n}),_defineProperty(_extraReducers,__getComments.rejected,function(state,action){state.isLoading=false;// 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\nstate.error=action.payload;// catch 된 error 객체를 state.error에 넣습니다.\n}),_defineProperty(_extraReducers,__postComments.pending,function(state){state.isLoading=true;// 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n}),_defineProperty(_extraReducers,__postComments.fulfilled,function(state,action){state.isLoading=false;// 네트워크 요청이 끝났으니, false로 변경합니다.\nstate.comments=action.payload;// Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n}),_defineProperty(_extraReducers,__postComments.rejected,function(state,action){state.isLoading=false;// 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\nstate.error=action.payload;// catch 된 error 객체를 state.error에 넣습니다.\n}),_extraReducers)});// // 액션크리에이터는 컴포넌트에서 사용하기 위해 export 하고\n// export const { addNumber, minusNumber } = reviewSlice.actions;\n// // reducer 는 configStore에 등록하기 위해 export default 합니다.\n// export default reviewSlice.reducer;\n_objectDestructuringEmpty(commentsSlice.actions);export{};export default commentsSlice.reducer;","map":{"version":3,"names":["axios","createAsyncThunk","createSlice","url2","initialState","comments","isLoading","error","__postComments","payload","thunkAPI","post","data","console","log","fulfillWithValue","rejectWithValue","__getComments","get","commentsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","rejected","actions","reducer"],"sources":["/Users/dayoon_sohn/Desktop/sparta/deploy/src/Redux/modules/commentSlice.js"],"sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n\nconst url2 = `http://localhost:3001/comments`\n\n\nconst initialState = {\n  comments: [],\n  isLoading: false,\n  error: null,\n\n};\nexport const __postComments = createAsyncThunk(\n  \"comments/postComments\",\n  async (payload, thunkAPI) => {\n    try {\n      // const data = await axios.post(\"http://localhost:3001/comments\");\n    \n      const data = await axios.post(url2,\n        payload\n        // reviewsId:payload.reviewsId,\n        // comment: payload.comment,\n      )\n      console.log(data);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const __getComments = createAsyncThunk(\n  \"comments/getComments\",\n  async (payload, thunkAPI) => {\n    try {\n      // const data = await axios.get(\"http://localhost:3001/comments\");\n      // const data = await axios.get(`${url2}+?reviewId=${payload}`);\n      const data = await axios.get(url2);\n      // const data = await axios.get(url2+\"/\"+payload);\n\n      // /comments 앞에부분 변수 할당해서 코드 줄이는 방법도 있음\n      console.log(data);\n      return thunkAPI.fulfillWithValue(data.data);\n      // console.log(data);\n    } catch (error) {\n      console.log(error);\n      return thunkAPI.rejectWithValue(error);\n    }\n\n  }\n);\n// export const updateUser2 = createAsyncThunk(\n//   \"users/update\", \n//   async (user) => {\n//   const response = await axios.post(\n//     \"http://localhost:8800/api/users/1/update\",\n//     user\n//   );\n//   return response.data;\n// });\n// export const loginUser = createAsyncThunk(\n//   \"auth/login\",\n//   async (authData) => {\n//     const response = axios.post(\"auth/token/login/\", {\n//       email: authData.email,\n//       password: authData.password,\n//     });\n//     return response.data;\n//   },\n//   {\n//     condition: (authData, { getState, extra }) => {\n//       const { auth } = getState();\n//       if ([\"fulfilled\", \"loading\"].includes(auth.status)) {\n//         return false;\n//       }\n//     },\n//   }\n// );\n\n\nexport const commentsSlice = createSlice({\n  name: \"comments\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n      [__getComments.pending]: (state) => {\n        state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n      },\n      [__getComments.fulfilled]: (state, action) => {\n        state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n        state.comments = action.payload; // Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n      },\n      [__getComments.rejected]: (state, action) => {\n        state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n        state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n      },\n      [__postComments.pending]: (state) => {\n        state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n      },\n      [__postComments.fulfilled]: (state, action) => {\n        state.isLoading = false; // 네트워크 요청이 끝났으니, false로 변경합니다.\n        state.comments = action.payload; // Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n      },\n      [__postComments.rejected]: (state, action) => {\n        state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n        state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n      },\n\n  },\n});\n\n// // 액션크리에이터는 컴포넌트에서 사용하기 위해 export 하고\n// export const { addNumber, minusNumber } = reviewSlice.actions;\n// // reducer 는 configStore에 등록하기 위해 export default 합니다.\n// export default reviewSlice.reducer;\n\nexport const {} = commentsSlice.actions;\nexport default commentsSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}